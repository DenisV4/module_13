print('Задача 6. Яйца\n')


# В рамках программы колонизации Марса
# компания «Спейс Инжиниринг» вывела особую породу черепах,
# которые, по задумке, должны размножаться, откладывая яйца в марсианском грунте.
# Откладывать яйца слишком близко к поверхности опасно из-за радиации,
# а слишком глубоко — из-за давления грунта и недостатка кислорода.
# Вообще, факторов очень много,
# но специалисты проделали большую работу и предположили,
# что уровень опасности для черепашьих яиц рассчитывается по формуле
# D = x**3 − 3x**2 − 12x + 10,
# где x — глубина кладки в метрах,
# а D — уровень опасности в условных единицах.
#
# Для тестирования гипотезы
# нужно взять пробу грунта на безопасной, согласно формуле, глубине.
#
# Напишите программу,
# находящую такое значение глубины "х", при котором уровень опасности как можно более близок к нулю.
# На вход программе подаётся максимально допустимое отклонение уровня опасности от нуля,
# а программа должна рассчитать приблизительное значение "х",
# удовлетворяющее этому отклонению.
#
# Известно, что глубина точно больше нуля и меньше четырёх метров.
#
# Обеспечьте контроль ввода.
#
# Пример:
# Введите максимально допустимый уровень опасности: 0.01
#
# Приблизительная глубина безопасной кладки: 0.732421875 м

def get_danger(depth):
    return depth ** 3 - 3 * depth ** 2 - 12 * depth + 10

def get_depth(danger_level):
    min_depth = 0.1
    max_depth = 4

    while (max_depth - min_depth) / 2 > danger_level:
        mid_depth = (min_depth + max_depth) / 2
        mid_danger = get_danger(mid_depth)

        if abs(mid_danger) <= danger_level:
            return mid_depth
        if get_danger(min_depth) * mid_danger < 0:
            max_depth = mid_depth
        else:
            min_depth = mid_depth

    return (min_depth + max_depth) / 2

while True:
    danger_level = float(input("Введите максимально допустимый уровень опасности: "))
    if 0 < danger_level < 1:
        break

    print("Неверные данные. Повторите ввод.\n")

print(f"\nПриблизительная глубина безопасной кладки: {get_depth(danger_level)} м")
